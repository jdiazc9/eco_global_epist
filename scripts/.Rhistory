theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16,
vjust = -1),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
print(myplot)
myplot <-
ggplot(df[df$dataset == unique(df$dataset)[i], ],
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16,
vjust = -5),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
print(myplot)
myplot <-
ggplot(df[df$dataset == unique(df$dataset)[i], ],
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
print(myplot)
myplots <- vector(mode = 'list', size = length(unique(df$dataset)))
myplots <- vector(mode = 'list', length = length(unique(df$dataset)))
myplots <- vector(mode = 'list', length = length(unique(df$dataset)))
for (i in 1:length(unique(df$dataset))) {
myplots[i] <-
ggplot(df[df$dataset == unique(df$dataset)[i], ],
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
}
myplots <- vector(mode = 'list', length = length(unique(df$dataset)))
for (i in 1:length(unique(df$dataset))) {
myplots[[i]] <-
ggplot(df[df$dataset == unique(df$dataset)[i], ],
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
}
grid.arrange(myplots[[1]], myplots[[2]], respect=TRUE)
myplot <- grid.arrange(myplots[[1]], myplots[[2]], respect=TRUE)
ggsave(myplot,
filename = 'tst.pdf',
device = 'pdf',
dpi = 600,
width = 350,
height = 800,
units = 'mm',
limitsize = F)
?grid.arrange
rel_heights <- NA
for (i in 1:length(unique(df$dataset))) {
rel_heights[i] <- nrow(df[df$dataset == unique(df$dataset)[i], ])
myplots[[i]] <-
ggplot(df[df$dataset == unique(df$dataset)[i], ],
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
}
rel_heights
rel_heights <- NA
for (i in 1:length(unique(df$dataset))) {
rel_heights[i] <- length(unique(df$species_i[df$dataset == unique(df$dataset)[i]]))
myplots[[i]] <-
ggplot(df[df$dataset == unique(df$dataset)[i], ],
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
}
rel_heights
myplot <- grid.arrange(myplots[[1]], myplots[[2]], rel_heights = rel_heights/sum(rel_heights))
rel_heights/sum(rel_heights)
myplot <- grid.arrange(myplots[[1]], myplots[[2]], rel_heights = rel_heights[1:2]/sum(rel_heights[1:2]))
myplot <- plot_grid(myplots[[1]], myplots[[2]], rel_heights = rel_heights[1:2]/sum(rel_heights[1:2]))
ggsave(myplot,
filename = 'tst.pdf',
device = 'pdf',
dpi = 600,
width = 350,
height = 800,
units = 'mm',
limitsize = F)
rel_heights/sum(rel_heights)
myplot <- plot_grid(myplots[[1]], myplots[[2]], rel_heights = rel_heights[1:2]/sum(rel_heights[1:2]))
ggsave(myplot,
filename = 'tst.pdf',
device = 'pdf',
dpi = 600,
width = 350,
height = 800,
units = 'mm',
limitsize = F)
myplot <- plot_grid(myplots[[1]], myplots[[2]],
ncol = 1,
rel_heights = rel_heights[1:2]/sum(rel_heights[1:2]))
ggsave(myplot,
filename = 'tst.pdf',
device = 'pdf',
dpi = 600,
width = 350,
height = 800,
units = 'mm',
limitsize = F)
myplot <- plot_grid(myplots[[1]], myplots[[2]], myplots[[3]], myplots[[4]], myplots[[5]], myplots[[6]], myplots[[7]],
ncol = 1,
rel_heights = rel_heights)
ggsave(myplot,
filename = 'tst.pdf',
device = 'pdf',
dpi = 600,
width = 200,
height = 800,
units = 'mm',
limitsize = F)
myplot <- plot_grid(myplots,
ncol = 1,
rel_heights = rel_heights)
myplots <- vector(mode = 'list', length = length(unique(df$dataset)))
rel_heights <- NA
for (i in 1:length(unique(df$dataset))) {
rel_heights[i] <- 2 + length(unique(df$species_i[df$dataset == unique(df$dataset)[i]]))
myplots[[i]] <-
ggplot(df[df$dataset == unique(df$dataset)[i], ],
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
}
rel_heights/sum(rel_heights)
myplot <- plot_grid(myplots[[1]], myplots[[2]], myplots[[3]], myplots[[4]], myplots[[5]], myplots[[6]], myplots[[7]],
ncol = 1,
rel_heights = rel_heights)
ggsave(myplot,
filename = 'tst.pdf',
device = 'pdf',
dpi = 600,
width = 200,
height = 800,
units = 'mm',
limitsize = F)
myplot <- plot_grid(myplots[[1]], myplots[[2]], myplots[[3]], myplots[[4]], myplots[[5]], myplots[[6]], myplots[[7]],
ncol = 1,
rel_heights = rel_heights,
axis = 'r')
ggsave(myplot,
filename = 'tst.pdf',
device = 'pdf',
dpi = 600,
width = 200,
height = 800,
units = 'mm',
limitsize = F)
myplot <- plot_grid(myplots[[1]], myplots[[2]], myplots[[3]], myplots[[4]], myplots[[5]], myplots[[6]], myplots[[7]],
ncol = 1,
rel_heights = rel_heights,
align = 'v',
axis = 'r')
ggsave(myplot,
filename = 'tst.pdf',
device = 'pdf',
dpi = 600,
width = 200,
height = 800,
units = 'mm',
limitsize = F)
myplots <- vector(mode = 'list', length = length(unique(df$dataset)))
rel_heights <- NA
for (i in 1:length(unique(df$dataset))) {
rel_heights[i] <- 2.5 + length(unique(df$species_i[df$dataset == unique(df$dataset)[i]]))
myplots[[i]] <-
ggplot(df[df$dataset == unique(df$dataset)[i], ],
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
}
rel_heights/sum(rel_heights)
myplot <- plot_grid(myplots[[1]], myplots[[2]], myplots[[3]], myplots[[4]], myplots[[5]], myplots[[6]], myplots[[7]],
ncol = 1,
rel_heights = rel_heights,
align = 'v',
axis = 'r')
ggsave(myplot,
filename = 'tst.pdf',
device = 'pdf',
dpi = 600,
width = 200,
height = 800,
units = 'mm',
limitsize = F)
ggsave(myplot,
filename = '../plots/effInter_heatmaps_all.pdf',
device = 'pdf',
dpi = 600,
width = 200,
height = 800,
units = 'mm',
limitsize = F)
dfi <- df[df$dataset == unique(df$dataset)[i], ]
myplots[[i]] <-
ggplot(dfi,
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
nchar(dfi$species_j)
myplots <- vector(mode = 'list', length = length(unique(df$dataset)))
rel_heights <- NA
for (i in 1:length(unique(df$dataset))) {
dfi <- df[df$dataset == unique(df$dataset)[i], ]
myplots[[i]] <-
ggplot(dfi,
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
rel_heights[i] <- 2*max(nchar(dfi$species_j))/max(nchar(df$species_j)) +
length(unique(df$species_i[df$dataset == unique(df$dataset)[i]]))
}
rel_heights/sum(rel_heights)
myplot <- plot_grid(myplots[[1]], myplots[[2]], myplots[[3]], myplots[[4]], myplots[[5]], myplots[[6]], myplots[[7]],
ncol = 1,
rel_heights = rel_heights,
align = 'v',
axis = 'r')
ggsave(myplot,
filename = '../plots/effInter_heatmaps_all.pdf',
device = 'pdf',
dpi = 600,
width = 200,
height = 800,
units = 'mm',
limitsize = F)
ggsave(myplot,
filename = '../plots/effInter_heatmaps_all.pdf',
device = 'pdf',
dpi = 600,
width = 250,
height = 800,
units = 'mm',
limitsize = F)
source("~/GitHub/eco_global_epist/scripts/slopes_theory_vs_exp.R", echo=TRUE)
View(dfi)
myplots <- vector(mode = 'list', length = length(unique(df$dataset)))
rel_heights <- NA
for (i in 1:length(unique(df$dataset))) {
dfi <- df[df$dataset == unique(df$dataset)[i], c('species_i', 'species_j', 'eff_inter')]
dfi <- rbind(dfi,
data.frame(species_i = unique(dfi$species_i),
species_j = unique(dfi$species_i),
eff_inter = NaN))
myplots[[i]] <-
ggplot(dfi,
aes(x = species_j, y = species_i, fill = eff_inter)) +
geom_tile() +
scale_y_discrete(name = 'Focal species\n ',
limits = rev,
expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_gradient2(low = 'firebrick1',
high = 'deepskyblue',
mid = 'white',
midpoint = 0,
na.value = 'gray',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
axis.text = element_text(size = 12,
face = 'italic'),
axis.text.x = element_text(angle = -45,
hjust = 0),
axis.ticks = element_blank()) +
guides(fill=guide_colorbar(ticks.colour = NA))
rel_heights[i] <- 2*max(nchar(dfi$species_j))/max(nchar(df$species_j)) +
length(unique(df$species_i[df$dataset == unique(df$dataset)[i]]))
}
rel_heights/sum(rel_heights)
myplot <- plot_grid(myplots[[1]], myplots[[2]], myplots[[3]], myplots[[4]], myplots[[5]], myplots[[6]], myplots[[7]],
ncol = 1,
rel_heights = rel_heights,
align = 'v',
axis = 'r')
ggsave(myplot,
filename = '../plots/effInter_heatmaps_all.pdf',
device = 'pdf',
dpi = 600,
width = 250,
height = 800,
units = 'mm',
limitsize = F)
source("~/GitHub/eco_global_epist/scripts/slopes_theory_vs_exp.R", echo=TRUE)
source("Z:/OneDrive/Documentos/GitHub/eco_global_epist/scripts/datasets_fees_FvsF.R", echo=TRUE)
ggplot(slopes_cmp, aes(x = slope, y = slope_fvsf)) +
geom_abline(slope = 1,
intercept = 1,
color = 'gray') +
geom_point() +
geom_blank(aes(x = slope_fvsf, y = slope)) +
theme_bw()
ggplot(slopes_cmp, aes(x = slope, y = slope_fvsf)) +
geom_abline(slope = 1,
intercept = 1,
color = 'gray') +
geom_point() +
geom_blank(aes(x = slope_fvsf, y = slope)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank())
