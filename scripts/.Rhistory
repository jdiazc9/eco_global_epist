data.j)
}
po <- merge(predF, oos, by = 'community', suffixes = c('_pred', '_obs'))
r_squared <- cor(po$fun_pred, po$fun_obs)^2
best <- rbind(data.frame(community = predF$community,
fun = predF$fun,
source = 'pred'),
data.frame(community = data.j$community,
fun = data.j$fun,
source = 'obs'))
best <- best[order(best$fun, decreasing = T), ]
data.j <- rbind(data.j, oos)
F_opt <- data.j$fun[data.j$community == best$community[1]]
F_opt <- F_opt/max(data.j$fun)
return(c(f_data = f_data, n_fees = n_fees, r_squared = r_squared, F_opt = F_opt))
}
# apply wrapper function to all data sets
f <- sort(runif(n = 100, min = 0.1, max = 0.8)) # fraction of points kept in-sample to fit FEEs
mode <- rep('full_closure', length(data))
mode[grepl('Clark', files)] <- 'base' # we globaly infer residuals unless computationally out of reach
myruns <- data.frame(dataset = numeric(0),
f_sample = numeric(0),
n_fees = numeric(0),
r_squared = numeric(0),
F_opt = numeric(0))
i <- 1#for (i in 1:length(data)) {
j <- 1#for (j in 1:length(f)) {
print(paste('Dataset', i, '/ iteration', j))
run <- rsq_vs_nInSample(f[j], data = data[[i]], mode = mode[i])
run
source("C:/Users/Juan/Desktop/ge_paper/eco_global_epist/scripts/figS3.5.R", echo=TRUE)
run
i
j
print(paste('Dataset', i, '/ iteration', j))
run <- rsq_vs_nInSample(f[j], data = data[[i]], mode = mode[i])
myruns <- rbind(myruns,
data.frame(dataset = i,
f_sample = run$f_sample,
n_fees = run$n_fees,
r_squared = run$r_squared,
F_opt = run$F_opt))
run
source("C:/Users/Juan/Desktop/ge_paper/eco_global_epist/scripts/figS3.5.R", echo=TRUE)
run
myruns <- rbind(myruns,
data.frame(dataset = i,
f_sample = run['f_data'],
n_fees = run['n_fees'],
r_squared = run['r_squared'],
F_opt = run['F_opt']))
View(myruns)
source("C:/Users/Juan/Desktop/ge_paper/eco_global_epist/scripts/figS3.5.R", echo=TRUE)
plot(myruns$n_fees, myruns$F_opt)
plot(myruns$f_sample, myruns$F_opt)
source("C:/Users/Juan/Desktop/ge_paper/eco_global_epist/scripts/figS3.5.R", echo=TRUE)
myruns <- myruns[myruns$dataset == 1, ]
plot(myruns$f_sample, myruns$F_opt)
plot(myruns$n_fees, myruns$F_opt)
plot(myruns$n_fees, myruns$r_squared)
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) + geom_point()
View(myruns)
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = FALSE)
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) +
geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE)
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) +
geom_point() +
facet_wrap(~dataset) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE)
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) +
geom_point() +
facet_wrap(~dataset,
scales = 'free') +
scale_y_continuous(limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE)
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) +
geom_point() +
facet_wrap(~dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)[2], 'predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE)
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) +
geom_point() +
facet_wrap(~dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE)
source("C:/Users/Juan/Desktop/ge_paper/eco_global_epist/scripts/figS3.5.R", echo=TRUE)
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) +
geom_point() +
facet_wrap(~dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5) +
annotate("segment", x=Inf, xend=Inf, y=-Inf, yend=Inf,size=0.5, color = 'red')
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) +
geom_point() +
facet_wrap(~dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(data = myruns, aes(x = n_fees, y = r_squared)) +
geom_point() +
facet_wrap(~dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 18),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
View(myruns)
# plot
tst <- gather(myruns, metric, value, r_squared:F_opt)
View(tst)
View(tst)
# plot
plot_this <- gather(myruns, metric, value, r_squared:F_opt)
ggplot(plot_this, aes(x = n_fees, y = value, color = metric)) +
geom_point() +
facet_wrap(metric ~ dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 18),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
plot_this$metric <- factor(plot_this$metric, levels = c('r_squared', 'F_opt'))
ggplot(plot_this, aes(x = n_fees, y = value, color = metric)) +
geom_point() +
facet_wrap(metric ~ dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 18),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(plot_this, aes(x = n_fees, y = value, color = metric)) +
geom_point() +
facet_wrap(metric ~ dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
scale_color_manual(values = c('black', 'red')) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = TRUE) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 18),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(plot_this, aes(x = n_fees, y = value, color = metric)) +
geom_point() +
facet_wrap(metric ~ dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
scale_color_manual(values = c('black', 'red')) +
geom_smooth(method = "glm",
formula = y ~ x,
method.args = list(family = "binomial"),
se = TRUE) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 18),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(plot_this, aes(x = n_fees, y = value, color = metric)) +
geom_point() +
facet_wrap(metric ~ dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
scale_color_manual(values = c('black', 'red')) +
geom_smooth(method = "glm",
formula = y ~ x,
method.args = list(family = "binomial"),
se = TRUE) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 18),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank()) +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
View(myruns)
myplot <-
ggplot(plot_this, aes(x = n_fees, y = value, color = metric)) +
geom_point() +
facet_wrap(metric ~ dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
scale_color_manual(values = c('black', 'red')) +
geom_smooth(method = "glm",
formula = y ~ x,
method.args = list(family = "binomial"),
se = TRUE) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 18),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank()) +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
print(myplot)
ggsave(myplot,
filename = '../plots/figS3.5.pdf',
device = 'pdf',
dpi = 600,
width = 180,
height = 120,
units = 'mm',
limitsize = F)
myplot <-
ggplot(plot_this, aes(x = n_fees, y = value, color = metric)) +
geom_smooth(method = "glm",
formula = y ~ x,
method.args = list(family = "binomial"),
se = TRUE) +
geom_point() +
facet_wrap(metric ~ dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
scale_color_manual(values = c('black', 'red')) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 18),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank()) +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
print(myplot)
ggsave(myplot,
filename = '../plots/figS3.5.pdf',
device = 'pdf',
dpi = 600,
width = 180,
height = 120,
units = 'mm',
limitsize = F)
myplot <-
ggplot(plot_this, aes(x = n_fees, y = value, color = metric)) +
geom_smooth(method = "glm",
formula = y ~ x,
method.args = list(family = "binomial"),
se = TRUE,
size = 0.5) +
geom_point() +
facet_wrap(metric ~ dataset,
scales = 'free') +
scale_x_continuous(name = 'Avg. number of\ndata points per fitted FEE',
breaks = pretty_breaks(n = 4)) +
scale_y_continuous(name = expression(paste(italic(R)^2, ' predicted vs. observed ', italic(F))),
limits = c(0, 1),
breaks = c(0, 0.5, 1),
labels = c('0', '0.5', '1')) +
scale_color_manual(values = c('black', 'red')) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 18),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.text.y.right = element_text(size = 16,
color = 'red'),
axis.title = element_text(size = 18),
axis.title.y.right = element_text(size = 18,
color = 'red'),
axis.ticks.y.right = element_line(color = 'red'),
panel.border = element_blank(),
panel.background = element_blank()) +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
print(myplot)
ggsave(myplot,
filename = '../plots/figS3.5.pdf',
device = 'pdf',
dpi = 600,
width = 180,
height = 120,
units = 'mm',
limitsize = F)
source("C:/Users/Juan/Desktop/ge_paper/eco_global_epist/scripts/figS3.5.R", echo=TRUE)
source("C:/Users/Juan/Desktop/ge_paper/eco_global_epist/scripts/figS3.5.R", echo=TRUE)
rm(list = ls())
# load auxiliary functions
source('./ecoFunctions.R')
library(scales)
library(gridExtra)
library(tidyverse)
library(cowplot)
# load data sets
files <- list.files('../data_sets', full.names = T)
files <- files[c(1, 2, 5)] # for this analysis we exclude the 2 combinatorially smallest data sets
files
source("C:/Users/Juan/Desktop/ge_paper/eco_global_epist/scripts/figS3.5.R", echo=TRUE)
warnings()
source("C:/Users/Juan/Desktop/ge_paper/eco_global_epist/scripts/figS3.5.R", echo=TRUE)
warnings()
