scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = T,
fullrange = T) +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_point(cex = 3,
shape = 16)
ge_data_i$group <- c('A', 'B')[1 + sapply(ge_data_i$background, FUN = function(x) grepl('T', x))]
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_point(cex = 3,
shape = 16)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = T,
fullrange = T) +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual(values = c('#d72027',
'#519ed7')) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
color = 'black',
se = F,
fullrange = T) +
geom_point(color = 'black',
cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = F,
fullrange = T) +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual(values = c('#d72027',
'#519ed7')) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
View(plot_this)
ggplot(ge_data_i, aes(x = background_f, y = d_f)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
color = 'black',
se = F,
fullrange = T) +
geom_abline(slope = plot_this$slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P'],
intercept = plot_this$slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P'],
linetype = 'dashed',
color = 'black') +
geom_point(color = 'black',
cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = F,
fullrange = T) +
geom_abline(slope = plot_this$slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
intercept = plot_this$slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
linetype = 'dashed',
color = '#d72027') +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual(values = c('#d72027',
'#519ed7')) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
color = 'black',
se = F,
fullrange = T) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P'],
linetype = 'dashed',
color = 'black') +
geom_point(color = 'black',
cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = F,
fullrange = T) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
linetype = 'dashed',
color = '#d72027') +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual(values = c('#d72027',
'#519ed7')) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = F,
fullrange = T) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_1'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_1'],
linetype = 'dashed',
color = '#d72027') +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual(values = c('#d72027',
'#519ed7')) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = F,
fullrange = T) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
linetype = 'dashed',
color = '#d72027') +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual(values = c('#d72027',
'#519ed7')) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = F,
fullrange = T) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
linetype = 'dashed',
color = '#d72027') +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_1'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_1'],
linetype = 'dashed',
color = '#519ed7') +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual(values = c('#d72027',
'#519ed7')) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
color = 'black',
se = F,
fullrange = T) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P'],
linetype = 'dashed',
color = 'black',
size = 1) +
geom_point(color = 'black',
cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = F,
fullrange = T) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
linetype = 'dashed',
color = '#d72027',
size = 1) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_1'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_1'],
linetype = 'dashed',
color = '#519ed7',
size = 1) +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual(values = c('#d72027',
'#519ed7')) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
# make supplementary plots for P. polymyxa
ge_data_i <- makeGEdata(matrix2string(data[[1]]))
ge_data_i <- ge_data_i[ge_data_i$knock_in == 'P', ]
ge_data_i$group <- c('A', 'B')[1 + sapply(ge_data_i$background, FUN = function(x) grepl('T', x))]
myplot <-
ggplot(ge_data_i, aes(x = background_f, y = d_f)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
color = 'black',
se = F,
fullrange = T) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P'],
linetype = 'dashed',
color = 'black',
size = 1) +
geom_point(color = 'black',
cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
print(myplot)
ggsave(myplot,
filename = '../plots/polymyxa_predicted_fees_global.pdf',
device = 'pdf',
dpi = 600,
width = 150,
height = 100,
units = 'mm',
limitsize = F)
myplot <-
ggplot(ge_data_i, aes(x = background_f, y = d_f, group = group, color = group)) +
geom_abline(slope = 0, intercept = 0,
color = '#d1d3d4') +
geom_smooth(method = 'lm',
formula = y~x,
se = F,
fullrange = T) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_0'],
linetype = 'dashed',
color = '#d72027',
size = 1) +
geom_abline(slope = plot_this$expected_slope[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_1'],
intercept = plot_this$expected_intercept[plot_this$dataset == 'Bacterial starch hydrolysis' & plot_this$species == 'P_1'],
linetype = 'dashed',
color = '#519ed7',
size = 1) +
geom_point(cex = 3,
shape = 16) +
scale_x_continuous(name = 'F (background) [a.u.]',
limits = c(-5, 15)) +
scale_y_continuous(name = 'dF [a.u.]',
limits = c(-10, 35)) +
scale_color_manual(values = c('#d72027',
'#519ed7')) +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(face = 'italic',
size = 10),
aspect.ratio = 0.6,
axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = 'none') +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf, size=0.5) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5)
print(myplot)
ggsave(myplot,
filename = '../plots/polymyxa_predicted_fees_split.pdf',
device = 'pdf',
dpi = 600,
width = 150,
height = 100,
units = 'mm',
limitsize = F)
