data <- read.table('ge_langenheder.txt', header = T, quote = F)
data <- read.table('ge_langenheder.txt', header = T, quote = '')
View(data)
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$fun <- data$background_f + data$d_f
data <- data[, c('community', 'fun')]
View(data)
length(unique(data$community))
tst <- data[data$community == data$community[1], ]
View(tst)
tst <- unique(data)
View(tst)
tst2 <- tst[tst$community == tst$community[1], ]
tst2 <- tst[tst$community == tst$community[2], ]
tst2 <- tst[tst$community == tst$community[3], ]
tst2 <- tst[tst$community == tst$community[4], ]
nreps <- sapply(data$community, FUN = function(x) sum(data$community == x))
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$fun <- data$background_f + data$d_f
data <- data[, c('community', 'fun')]
data <- unique(data)
nreps <- sapply(data$community, FUN = function(x) sum(data$community == x))
which(nreps > 1)
repcomms <- names(which(nreps > 1))
repcomms
tst <- data[data$community == repcomms[1], ]
View(tst)
tst <- data[data$community == repcomms[2], ]
View(tst)
tst$fun[1]
tst$fun[1] == tst$fun[2]
isTRUE(tst$fun[1] == tst$fun[2])
tst <- data[data$community == repcomms[10], ]
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$fun <- data$background_f + data$d_f
data <- data[, c('community', 'fun')]
data <- aggregate(formula = fun ~ community,
data = data,
FUN = mean)
View(data)
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$fun <- data$background_f + data$d_f
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$community <- gsub('NA,', '', data$community)
data$fun <- data$background_f + data$d_f
data <- data[, c('community', 'fun')]
data <- aggregate(formula = fun ~ community,
data = data,
FUN = mean)
sapply(data[, 1],
FUN = function(x) strsplit(x, split = ',')[[1]])
species <- unique(unlist(sapply(data[, 1],
FUN = function(x) strsplit(x, split = ',')[[1]])))
species
data_out <- matrix(0, nrow = nrow(data), ncol = length(species))
colnames(data_out) <- species
View(data_out)
i <- 1
strsplit(data[i, 1], split = ',')[[1]] %in% species
species %in% strsplit(data[i, 1], split = ',')[[1]]
as.numeric(species %in% strsplit(data[i, 1], split = ',')[[1]])
tst <- sapply(1:nrow(data_out),
FUN = function(i) as.numeric(species %in% strsplit(data[i, 1], split = ',')[[1]]))
View(tst)
tst <- t(sapply(1:nrow(data_out),
FUN = function(i) as.numeric(species %in% strsplit(data[i, 1], split = ',')[[1]])))
View(tst)
View(data)
species <- unique(unlist(sapply(data[, 1],
FUN = function(x) strsplit(x, split = ',')[[1]])))
data_out <- t(sapply(1:nrow(data_out),
FUN = function(i) as.numeric(species %in% strsplit(data[i, 1], split = ',')[[1]])))
colnames(data_out) <- species
View(data)
View(data_out)
data_out <- cbind(data_out, fun = data[, 2])
View(data)
View(data_out)
data <- data_out
data <- data_out
species <- colnames(data)[-nrow(data)]
species
species <- colnames(data)[-c(nrow(data))]
species
species <- colnames(data)[-ncol(data)]
species
species <- colnames(data)[-ncol(data)]
species <- sort(species)
species
i
data[i, -ncol(data)]
species[data[i, -ncol(data)]]
species[data[3, -ncol(data)]]
data[3, ]
species[data[3, -ncol(data)] == 1]
paste(species[data[i, -ncol(data)] == 1], collapse = ',')
i
i <- 3
paste(species[data[i, -ncol(data)] == 1], collapse = ',')
communities <- sapply(1:nrow(data),
FUN = function(i) paste(species[data[i, -ncol(data)] == 1], collapse = ','))
communities
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$community <- gsub('NA,', '', data$community)
data$fun <- data$background_f + data$d_f
data <- data[, c('community', 'fun')]
data <- aggregate(formula = fun ~ community,
data = data,
FUN = mean)
string2matrix <- function(data) {
# takes a data frame with 2 columns, the first one containing community names
# (species present separated by commas with no spaces, e.g. 'sp1,sp2,sp3') and
# the second one community functions, and converts it to binary matrix format
species <- unique(unlist(sapply(data[, 1],
FUN = function(x) strsplit(x, split = ',')[[1]])))
data_out <- t(sapply(1:nrow(data_out),
FUN = function(i) as.numeric(species %in% strsplit(data[i, 1], split = ',')[[1]])))
colnames(data_out) <- species
data_out <- cbind(data_out, fun = data[, 2])
return(data_out)
}
matrix2string <- function(data) {
# inverse operation with respect to string2matrix
species <- colnames(data)[-ncol(data)]
species <- sort(species)
communities <- sapply(1:nrow(data),
FUN = function(i) paste(species[data[i, -ncol(data)] == 1], collapse = ','))
return(data.frame(community = communities,
fun = data[, ncol(data)]))
}
View(data)
tst <- string2matrix(data)
View(data)
species <- unique(unlist(sapply(data[, 1],
FUN = function(x) strsplit(x, split = ',')[[1]])))
data_out <- t(sapply(1:nrow(data_out),
FUN = function(i) as.numeric(species %in% strsplit(data[i, 1], split = ',')[[1]])))
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$community <- gsub('NA,', '', data$community)
data$fun <- data$background_f + data$d_f
data <- data[, c('community', 'fun')]
data <- aggregate(formula = fun ~ community,
data = data,
FUN = mean)
string2matrix <- function(data) {
# takes a data frame with 2 columns, the first one containing community names
# (species present separated by commas with no spaces, e.g. 'sp1,sp2,sp3') and
# the second one community functions, and converts it to binary matrix format
species <- unique(unlist(sapply(data[, 1],
FUN = function(x) strsplit(x, split = ',')[[1]])))
data_out <- t(sapply(1:nrow(data),
FUN = function(i) as.numeric(species %in% strsplit(data[i, 1], split = ',')[[1]])))
colnames(data_out) <- species
data_out <- cbind(data_out, fun = data[, 2])
return(data_out)
}
matrix2string <- function(data) {
# inverse operation with respect to string2matrix
species <- colnames(data)[-ncol(data)]
species <- sort(species)
communities <- sapply(1:nrow(data),
FUN = function(i) paste(species[data[i, -ncol(data)] == 1], collapse = ','))
return(data.frame(community = communities,
fun = data[, ncol(data)]))
}
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$community <- gsub('NA,', '', data$community)
data$fun <- data$background_f + data$d_f
data <- data[, c('community', 'fun')]
data <- aggregate(formula = fun ~ community,
data = data,
FUN = mean)
string2matrix <- function(data) {
# takes a data frame with 2 columns, the first one containing community names
# (species present separated by commas with no spaces, e.g. 'sp1,sp2,sp3') and
# the second one community functions, and converts it to binary matrix format
species <- unique(unlist(sapply(data[, 1],
FUN = function(community) strsplit(community, split = ',')[[1]])))
data_out <- t(sapply(1:nrow(data),
FUN = function(i) as.numeric(species %in% strsplit(data[i, 1], split = ',')[[1]])))
colnames(data_out) <- species
data_out <- cbind(data_out, fun = data[, 2])
return(data_out)
}
matrix2string <- function(data) {
# inverse operation with respect to string2matrix
species <- colnames(data)[-ncol(data)]
species <- sort(species)
communities <- sapply(1:nrow(data),
FUN = function(i) paste(species[data[i, -ncol(data)] == 1], collapse = ','))
return(data.frame(community = communities,
fun = data[, ncol(data)]))
}
tst <- string2matrix(data)
View(tst)
tst2 <- matrix2string(tst)
View(tst2)
View(data)
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$community <- gsub('NA,', '', data$community)
data$fun <- data$background_f + data$d_f
data <- data[, c('community', 'fun')]
data <- aggregate(formula = fun ~ community,
data = data,
FUN = mean)
rm(list = ls())
source('../scripts/ge_predict_stitch.R')
data <- read.table('ge_langenheder.txt', header = T, quote = '')
data$community <- orderNames(paste(data$background, data$knock_in, sep = ','))
data$community <- gsub('NA,', '', data$community)
data$fun <- data$background_f + data$d_f
data <- data[, c('community', 'fun')]
data <- aggregate(formula = fun ~ community,
data = data,
FUN = mean)
data <- string2matrix(data)
View(data)
colnames(data)[ncol(data)] <- 'function'
View(data)
write.table(data, file = 'tst.csv', row.names = F, col.names = T, quote = T, sep = ',')
